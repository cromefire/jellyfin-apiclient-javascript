import { Optional } from "../../types";
import { IsoType } from "../entities/IsoType";
import { MediaAttachment } from "../entities/MediaAttachment";
import { MediaStream } from "../entities/MediaStream";
import { Video3DFormat } from "../entities/Video3DFormat";
import { VideoType } from "../entities/VideoType";
import { MediaProtocol } from "../mediainfo/MediaProtocol";
import { TransportStreamTimestamp } from "../mediainfo/TransportStreamTimestamp";
import { MediaSourceType } from "./MediaSourceType";

export interface MediaSourceInfo {
    Protocol: MediaProtocol;
    Id: Optional<string>;
    Path: Optional<string>;
    EncoderPath: Optional<string>;
    EncoderProtocol: Optional<MediaProtocol>;
    Type: MediaSourceType;
    Container: Optional<string>;
    Size: Optional<number>;
    Name: Optional<string>;
    IsRemote: boolean;
    ETag: Optional<string>;
    RunTimeTicks: Optional<number>;
    ReadAtNativeFramerate: boolean;
    IgnoreDts: boolean;
    IgnoreIndex: boolean;
    GenPtsInput: boolean;
    SupportsTranscoding: boolean;
    SupportsDirectStream: boolean;
    SupportsDirectPlay: boolean;
    IsInfiniteStream: boolean;
    RequiresOpening: boolean;
    OpenToken: Optional<string>;
    RequiresClosing: boolean;
    LiveStreamId: Optional<string>;
    BufferMs: Optional<number>;
    RequiresLooping: boolean;
    SupportsProbing: boolean;
    VideoType: Optional<VideoType>;
    IsoType: Optional<IsoType>;
    Video3DFormat: Optional<Video3DFormat>;
    MediaStreams: MediaStream[];
    MediaAttachments: MediaAttachment[];
    Formats: string[];
    Bitrate: Optional<number>;
    Timestamp: Optional<TransportStreamTimestamp>;
    RequiredHttpHeaders: Record<string, string>;
    TranscodingUrl: Optional<string>;
    TranscodingSubProtocol: Optional<string>;
    TranscodingContainer: Optional<string>;
    AnalyzeDurationMs: Optional<number>;
    DefaultAudioStreamIndex: Optional<number>;
    DefaultSubtitleStreamIndex: Optional<number>;
}
